% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPlays.R
\name{getPlay}
\alias{getPlay}
\title{Get a Play as a Parsed XML Object}
\usage{
getPlay(name, ask = interactive())
}
\arguments{
\item{name}{a character string identifying the play.  Ideally this is the key under which the play is stored, but it can also be any
string that uniquely matches one of the play titles.  To see keys and titles, call \code{\link{playTitles}()}.}

\item{ask}{if more than  one play matches the name, should the user be asked to choose.  Default \code{TRUE} iff the session is interactive.  No resolution of multiple matches generates an error.}
}
\description{
Given a character string that identifies one of Shakespeare's plays, this function returns a pointer to the
parsed XML version of the play.  More prescisely, the returned value is a proxy for a Python object resulting from
parsing the corresponding file.
}
\details{
The text of the XML version of the plays (a contribution from Jon Bosak, available from \url{https://www.ibiblio.org/xml/examples/shakespeare/})
are included with this package.  In an R session, the first call to \code{getPlay()} matching a particular play will parse the file (in
Python) and return the proxy to the corresponding Python object.  The proxy is also saved in a table so that multiple calls for the same
play will only parse once.

This function uses a proxy for the Python function of the same name (which exists in the package as well, under the
name \code{getPlay_Python}.
}

